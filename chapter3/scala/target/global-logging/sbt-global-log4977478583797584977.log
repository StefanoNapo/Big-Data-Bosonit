[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\stefano.napolitano\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\stefano.napolitano\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 1.8.0_202)
[debug]       Load.loadUnit: plugins took 82.7806ms
[debug]       Load.loadUnit: defsScala took 0.2821ms
[debug] [Loading] Scanning directory C:\Users\stefano.napolitano\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\stefano.napolitano\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 91.1471 ms
[debug]           Load.resolveProject(global-plugins) took 33.2566ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\stefano.napolitano\.sbt\1.0\plugins, plugins: List(<none>))) took 144.2903ms
[debug] [Loading] Done in C:\Users\stefano.napolitano\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 182.1818ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3066ms
[debug]     Load.loadUnit(file:/C:/Users/stefano.napolitano/.sbt/1.0/plugins/, ...) took 272.7169ms
[debug]   Load.apply: load took 387.1757ms
[debug]   Load.apply: resolveProjects took 4.4669ms
[debug]   Load.apply: finalTransforms took 41.4699ms
[debug]   Load.apply: config.delegates took 7.4836ms
[debug]   Load.apply: Def.make(settings)... took 290.7275ms
[debug]   Load.apply: structureIndex took 85.2122ms
[debug]   Load.apply: mkStreams took 1.5763ms
[info] loading global plugins from C:\Users\stefano.napolitano\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3291.3131ms
[debug]           Load.loadUnit: plugins took 16.9283ms
[debug]           Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory C:\Users\stefano.napolitano\Downloads\chapter3\scala\project
[debug]             Load.loadUnit: mkEval took 6.5836ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\stefano.napolitano\Downloads\chapter3\scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.0445 ms
[info] loading settings for project scala-build from idea.sbt ...
[debug]               Load.resolveProject(scala-build) took 2.2535ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-build, base: C:\Users\stefano.napolitano\Downloads\chapter3\scala\project, plugins: List(<none>))) took 3.6838ms
[debug] [Loading] Done in C:\Users\stefano.napolitano\Downloads\chapter3\scala\project, returning: (scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2084.8725ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.5139ms
[debug]         Load.loadUnit(file:/C:/Users/stefano.napolitano/Downloads/chapter3/scala/project/, ...) took 2107.1567ms
[debug]       Load.apply: load took 2108.6509ms
[debug]       Load.apply: resolveProjects took 0.1745ms
[debug]       Load.apply: finalTransforms took 9.5409ms
[debug]       Load.apply: config.delegates took 0.4052ms
[debug]       Load.apply: Def.make(settings)... took 76.7953ms
[debug]       Load.apply: structureIndex took 20.5781ms
[debug]       Load.apply: mkStreams took 0.0025ms
[info] loading project definition from C:\Users\stefano.napolitano\Downloads\chapter3\scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3550.0581ms
[debug]     Load.loadUnit: defsScala took 0.0021ms
[debug] [Loading] Scanning directory C:\Users\stefano.napolitano\Downloads\chapter3\scala
[debug]       Load.loadUnit: mkEval took 0.2055ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\stefano.napolitano\Downloads\chapter3\scala, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.0635 ms
[info] loading settings for project scala from build.sbt ...
[debug]         Load.resolveProject(scala) took 66.6001ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scala, base: C:\Users\stefano.napolitano\Downloads\chapter3\scala, plugins: List(<none>))) took 70.0933ms
[debug] [Loading] Done in C:\Users\stefano.napolitano\Downloads\chapter3\scala, returning: (scala)
[debug]     Load.loadUnit: loadedProjectsRaw took 1038.6678ms
[debug]     Load.loadUnit: cleanEvalClasses took 5.1447ms
[debug]   Load.loadUnit(file:/C:/Users/stefano.napolitano/Downloads/chapter3/scala/, ...) took 4594.5673ms
[debug] Load.apply: load took 4595.6826ms
[debug] Load.apply: resolveProjects took 0.1187ms
[debug] Load.apply: finalTransforms took 20.7175ms
[debug] Load.apply: config.delegates took 0.2648ms
[debug] Load.apply: Def.make(settings)... took 56.8507ms
[debug] Load.apply: structureIndex took 17.41ms
[debug] Load.apply: mkStreams took 0.004ms
[info] set current project to main/scala/chapter3 (in build file:/C:/Users/stefano.napolitano/Downloads/chapter3/scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 61429 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 61429, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to main/scala/chapter3 (in build file:/C:/Users/stefano.napolitano/Downloads/chapter3/scala/)
[debug] > Exec(idea-shell, None, None)
